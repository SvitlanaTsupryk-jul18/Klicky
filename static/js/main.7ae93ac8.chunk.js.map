{"version":3,"sources":["components/Details.js","components/Cards.js","components/Select.js","components/Form.js","components/Info.js","App.js","index.js"],"names":["Details","state","isCompleted","isActive","details","openDetails","setState","prevState","saveDetails","props","setInfo","name","this","className","title","type","onClick","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","children","React","Component","Cards","cardType","handleChange","value","checked","onChange","event","target","src","alt","Select","options","map","optionValue","label","key","Date","now","Math","random","Form","debitCard","userName","cardNumber","cardCVV","cardMonth","cardYear","console","log","id","placeholder","maxLength","minLength","Info","sendInfo","App","information","info","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ae93ac8.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Details extends React.Component {\n  state = {\n    isCompleted: false,\n    isActive: false,\n    details: []\n  };\n\n  openDetails = () => {\n    this.setState(prevState => {\n      return {\n        isActive: !prevState.isActive\n      };\n    });\n  };\n\n  saveDetails = () => {\n    const { setInfo, name } = this.props;\n\n    this.setState(prevState => {\n      return {\n        isCompleted: !prevState.isCompleted\n      };\n    });\n    setInfo({ [name]: this.state.details });\n  };\n\n  render() {\n    const { isCompleted, isActive } = this.state;\n    return (\n      <div className={isActive ? \"details details--active\" : \"details\"}>\n        <div className=\"details__header\">\n          <h2 className=\"details__title\">{this.props.title}</h2>\n          <div>\n            <div\n              className={\n                isCompleted\n                  ? \"details__complete details__complete--active\"\n                  : \"details__complete\"\n              }\n            >\n              {isCompleted ? \"complete\" : \"incomplete\"}\n            </div>\n            <button\n              type=\"button\"\n              className=\"details__open-btn\"\n              onClick={this.openDetails}\n            >\n              <svg\n                className=\"details__arrow\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fas\"\n                data-icon=\"chevron-down\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 448 512\"\n              >\n                <path\n                  fill=\"currentColor\"\n                  d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n        {isActive && (\n          <>\n            <div>{this.props.children}</div>\n            <div className=\"details__buttons\">\n              <button type=\"button\" className=\"details__btn btn\">\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"details__btn btn\"\n                onClick={this.saveDetails}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React from \"react\";\r\n\r\nconst Cards = props => {\r\n  const { cardType, handleChange } = props;\r\n  return (\r\n    <div className=\"cards\">\r\n      <p className=\"cards__title\">Name on Card</p>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"cardType\"\r\n            className=\"cards__card\"\r\n            value=\"Visa\"\r\n            checked={cardType === \"Visa\"}\r\n            onChange={event => handleChange(event.target)}\r\n          />\r\n          <img src=\"./images/visa-light.svg\" alt=\"visa\" />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"cardType\"\r\n            className=\"cards__card\"\r\n            value=\"MasterCard\"\r\n            onChange={event => handleChange(event.target)}\r\n            checked={cardType === \"MasterCard\"}\r\n          />\r\n          <img src=\"./images/mc-light.svg\" alt=\"MasterCard\" />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"cardType\"\r\n            className=\"cards__card\"\r\n            value=\"Discover\"\r\n            checked={cardType === \"Discover\"}\r\n            onChange={event => handleChange(event.target)}\r\n          />\r\n          <img src=\"./images/disc-light.svg\" alt=\"Discover\" />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"cardType\"\r\n            className=\"cards__card\"\r\n            value=\"Amex\"\r\n            checked={cardType === \"Amex\"}\r\n            onChange={event => handleChange(event.target)}\r\n          />\r\n          <img src=\"./images/amex-light.svg\" alt=\"Amex\" />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\n\nconst Select = props => {\n  const { name, value, className, options, handleChange } = props;\n\n  return (\n    <div className=\"select\">\n      <select\n        name={name}\n        value={value}\n        onChange={event => handleChange(event.target)}\n        className={`select__input ${className}`}\n      >\n        {options.map(({ optionValue, label }) => (\n          <option\n            value={optionValue}\n            // selected={value === optionValue}\n            key={Date.now() * 10 * Math.random()}\n          >\n            {label}\n          </option>\n        ))}\n      </select>\n      <img\n        className=\"select__arrow\"\n        src=\"./images/arrow-down.svg\"\n        alt=\"arrow__down\"\n      />\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport Cards from \"./Cards\";\n// import Input from \"./Input\";\nimport Select from \"./Select\";\n\nclass Form extends React.Component {\n  state = {\n    debitCard: \"Credit or Debit\",\n    cardType: \"\",\n    userName: \"\",\n    cardNumber: \"\",\n    cardCVV: \"\",\n    cardMonth: \"\",\n    cardYear: \"\"\n  };\n\n  handleChange = target => {\n    this.setState({\n      // ...this.state,\n      [target.name]: target.value\n    });\n  };\n\n  render() {\n    const {\n      debitCard,\n      cardType,\n      userName,\n      cardNumber,\n      cardCVV,\n      cardMonth,\n      cardYear\n    } = this.state;\n    console.log(this.state);\n    return (\n      <div className=\"charge\">\n        <p className=\"charge__text\">\n          We're pretty unique in that you don't need to pay upfront to\n          advertise. Add a payment method info so that we can get paid when we\n          make a sale.\n        </p>\n        <form className=\"form\">\n          <h3 className=\"form__title\">Billing Information</h3>\n          <Select\n            name={\"debitCard\"}\n            value={debitCard}\n            handleChange={this.handleChange}\n            className=\"select__input\"\n            options={[\n              { value: \"credit\", label: \"Credit or Debit card\" },\n              { value: \"debit\", label: \"Debit card\" },\n              { value: \"credit\", label: \"Credit card\" }\n            ]}\n          />\n          <Cards handleChange={this.handleChange} cardType={cardType} />\n          <input\n            name=\"userName\"\n            type=\"text\"\n            id=\"userName\"\n            onChange={event => this.handleChange(event.target)}\n            value={userName.value}\n            placeholder=\"Jimmy Santos\"\n            // className={userName.active ? \"active--input\" : \"\"}\n          />\n          <div className=\"form__card-number\">\n            <input\n              name=\"cardNumber\"\n              type=\"text\"\n              maxLength=\"16\"\n              minLength=\"16\"\n              placeholder=\"e.g. 1234 1234 1234 1234\"\n              value={cardNumber.value}\n              onChange={event => this.handleChange(event.target)}\n            />\n            <input\n              name=\"cardCVV\"\n              type=\"text\"\n              maxLength=\"3\"\n              minLength=\"3\"\n              placeholder=\"e.g. 243\"\n              value={cardCVV.value}\n              onChange={event => this.handleChange(event.target)}\n            />\n            <Select\n              name={\"cardMonth\"}\n              value={cardMonth}\n              handleChange={this.handleChange}\n              className=\"select__input\"\n              options={[\n                { value: \"Month\", label: \"Month\" },\n                { value: \"1\", label: \"January\" },\n                { value: \"2\", label: \"February\" },\n                { value: \"3\", label: \"March\" },\n                { value: \"4\", label: \"April\" },\n                { value: \"5\", label: \"May\" },\n                { value: \"6\", label: \"June\" },\n                { value: \"7\", label: \"July\" },\n                { value: \"8\", label: \"August\" },\n                { value: \"9\", label: \"September\" },\n                { value: \"10\", label: \"October\" },\n                { value: \"11\", label: \"November\" },\n                { value: \"12\", label: \"December\" }\n              ]}\n            />\n            <Select\n              name={\"cardYear\"}\n              value={cardYear}\n              handleChange={this.handleChange}\n              className=\"select__input\"\n              options={[\n                { value: \"Year\", label: \"Year\" },\n                { value: \"2019\", label: \"2019\" },\n                { value: \"2020\", label: \"2020\" },\n                { value: \"2021\", label: \"2021\" },\n                { value: \"2022\", label: \"2022\" },\n                { value: \"2023\", label: \"2023\" },\n                { value: \"2024\", label: \"2024\" }\n              ]}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Details from \"./Details\";\nimport Form from \"./Form\";\n\nconst Info = ({ setInfo, sendInfo }) => {\n  return (\n    <div className=\"info\">\n      <main className=\"info__main\">\n        <Details\n          children={<p>Some Text1</p>}\n          title={[\n            \"How will customers \",\n            <span className=\"bold\" key=\"1\">\n              contact\n            </span>,\n            \" you?\"\n          ]}\n          name={\"customersContact\"}\n          setInfo={setInfo}\n        />\n        <Details\n          children={<p>Some Text2</p>}\n          title={[\n            \"How will customers \",\n            <span className=\"bold\" key=\"2\">\n              pay\n            </span>,\n            \"  you?\"\n          ]}\n          name={\"customersPay\"}\n          setInfo={setInfo}\n        />\n        <Details\n          title={[\n            \"How will Klickly \",\n            <span className=\"bold\" key=\"3\">\n              charge\n            </span>,\n            \" you?\"\n          ]}\n          name={\"KlickyCharge\"}\n          setInfo={setInfo}\n          children={<Form />}\n        />\n        <Details\n          children={<p>Some Text4</p>}\n          title={[\n            \"How will Klickly \",\n            <span className=\"bold\" key=\"4\">\n              contact\n            </span>,\n            \" you?\"\n          ]}\n          name={\"KlickyContact\"}\n          setInfo={setInfo}\n        />\n      </main>\n      <footer className=\"info__footer\">\n        <button type=\"button\" className=\"info__btn btn\">\n          Back\n        </button>\n        <button\n          type=\"button\"\n          className=\"info__btn btn--dark\"\n          onClick={sendInfo}\n        >\n          Launch\n        </button>\n      </footer>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Info from \"./components/Info\";\n\nclass App extends React.Component {\n  state = {\n    information: []\n  };\n\n  setInfo = info => {\n    this.setState(prevState => {\n      return {\n        information: [...prevState.information, info]\n      };\n    });\n  };\n\n  sendInfo = () => {\n    ///some request\n  };\n\n  render() {\n    return (\n      <div className=\"page\">\n        <header className=\"page__header\">\n          <h1>Campaign wizard: template expanded</h1>\n        </header>\n        <div className=\"page__wrapper content\">\n          <Info setInfo={this.setInfo} sendInfo={this.sendInfo} />\n          <aside className=\"content__aside aside\">\n            <h2 className=\"aside__title\">Helpful hints</h2>\n            <p className=\"aside__text\">\n              We hate filling out info too, but we can't process your sales\n              without more details - we need things like your deposit account\n              info, customer service details, and a CC in order to accept orders\n              and payments from future customers. But don't worry! Most of this\n              information is easily available in your{\" \"}\n              <span className=\"blue\">Shopify Settings</span>. And while we can't\n              copy this information directly for security reasons, we've\n              provided a link to help make your job a little easier.\n            </p>\n          </aside>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}